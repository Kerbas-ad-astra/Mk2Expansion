PART
{
	name = M2X_OMSpod
	module = Part
	author = SuicidalInsanity
	mesh = OMS.mu
	rescaleFactor = 1.0
	fx_exhaustFlame_white_tiny = 0.0, -0.2816985, 0.0, 0.0, 0.0, 0.0, running
	sound_vent_medium = engage
	sound_rocket_mini = running
	sound_vent_soft = disengage
	sound_explosion_low = flameout
	node_attach = 0, 0, 0, 1.0, 0.0, 0.0
	attachRules = 0,1,0,0,0
	TechRequired = precisionPropulsion
	entryCost = 12500
	cost = 950
	category = Engine
	subcategory = 0
	title = Mx2 "Stationkeeper" OMS Pod
	manufacturer = Insanity Aerospace
	description = An aerodynamic OMS pod for orbital insertions and de-orbit burns, designed to fit on an mk2 fuselage. The unit incorporates two efficient Monopropellant thrusters on gimbaled mounts, and even contains a modest amount of tankage in the aeroshell.
	mass = 0.125
	// heatConductivity = 0.06 // half default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.8 // engine nozzles are good at radiating.
	MODEL
	{
		model = Mk2Expansion/Parts/Utility/OMS/OMS
		texture = mk2adapters1m, Squad/Parts/FuelTank/mk2Adapters/mk2adapters1m
	}
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2000 // = 3600
	bulkheadProfiles = srf
	tags = maneuver manoeuvre orbital propuls thruster mono
	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = Obj_Gimbal
		gimbalRangeXP = 15 
		gimbalRangeXN = 5
		gimbalRangeYP = 10
		gimbalRangeYN = 10
	}
	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		exhaustDamage = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 40
		heatProduction = 30
		fxOffset = 0, 0, 0.02
		EngineType = MonoProp
		PROPELLANT
		{
			name = MonoPropellant
			ratio = 0.9
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 275
			key = 1 130
			key = 4 0.001
		}
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
	RESOURCE
	{
		name = MonoPropellant
		amount = 60
		maxAmount = 60
	}
}
